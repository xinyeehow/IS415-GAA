[
  {
    "objectID": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html",
    "href": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html",
    "title": "In-Class Exercise 08",
    "section": "",
    "text": "pacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)\n\n\n\n\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\xinyeehow\\IS415-GAA\\In-Class_Ex\\In-Class_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nSetting CRS\n\nmpsz_svy21 <- st_transform(mpsz, 3414)\n\n\nst_crs(mpsz_svy21)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\nst_bbox(mpsz_svy21) #view extent\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334 \n\n\n\n\n\n\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n\nInspecting aspatial data\n\nglimpse(condo_resale)\n\nRows: 1,436\nColumns: 23\n$ LATITUDE             <dbl> 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            <dbl> 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             <dbl> 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\nInspecting coord column\n\nhead(condo_resale$LONGITUDE) #see the data in XCOORD column\n\n[1] 103.7802 103.8123 103.7971 103.8247 103.9505 103.9386\n\n\n\nhead(condo_resale$LATITUDE) #see the data in YCOORD column\n\n[1] 1.287145 1.328698 1.313727 1.308563 1.321437 1.314198\n\n\nDisplay summary statistics\n\nsummary(condo_resale)\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000  \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html#converting-aspatial-data-frame-into-a-sf-object",
    "href": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html#converting-aspatial-data-frame-into-a-sf-object",
    "title": "In-Class Exercise 08",
    "section": "Converting aspatial data frame into a sf object",
    "text": "Converting aspatial data frame into a sf object\n\ncondo_resale.sf <- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %>%\n  st_transform(crs=3414)\n\nInspecting new sf layer\n\nhead(condo_resale.sf)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 22\n  POSTCODE SELLI…¹ AREA_…²   AGE PROX_…³ PROX_…⁴ PROX_…⁵ PROX_…⁶ PROX_…⁷ PROX_…⁸\n     <dbl>   <dbl>   <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1   118635 3000000     309    30    7.94   0.166   2.52     6.62   1.77   0.0584\n2   288420 3880000     290    32    6.61   0.280   1.93     7.51   0.545  0.616 \n3   267833 3325000     248    33    6.90   0.429   0.502    6.46   0.378  0.141 \n4   258380 4250000     127     7    4.04   0.395   1.99     4.91   1.68   0.382 \n5   467169 1400000     145    28   11.8    0.119   1.12     6.41   0.565  0.461 \n6   466472 1320000     139    22   10.3    0.125   0.789    5.09   0.781  0.0994\n# … with 12 more variables: PROX_MRT <dbl>, PROX_PARK <dbl>,\n#   PROX_PRIMARY_SCH <dbl>, PROX_TOP_PRIMARY_SCH <dbl>,\n#   PROX_SHOPPING_MALL <dbl>, PROX_SUPERMARKET <dbl>, PROX_BUS_STOP <dbl>,\n#   NO_Of_UNITS <dbl>, FAMILY_FRIENDLY <dbl>, FREEHOLD <dbl>,\n#   LEASEHOLD_99YR <dbl>, geometry <POINT [m]>, and abbreviated variable names\n#   ¹​SELLING_PRICE, ²​AREA_SQM, ³​PROX_CBD, ⁴​PROX_CHILDCARE, ⁵​PROX_ELDERLYCARE,\n#   ⁶​PROX_URA_GROWTH_AREA, ⁷​PROX_HAWKER_MARKET, ⁸​PROX_KINDERGARTEN"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html#exploratory-data-analysis-eda",
    "href": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html#exploratory-data-analysis-eda",
    "title": "In-Class Exercise 08",
    "section": "Exploratory Data Analysis (EDA)",
    "text": "Exploratory Data Analysis (EDA)\nPlotting the distribution of SELLING_PRICE\n\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\nGraph looks right-skewed. Next, we can do a log transformation to reduce the skewness\n\ncondo_resale.sf <- condo_resale.sf %>%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\nPlotting chart\n\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\nLooks better.\nPlotting multiple histograms by variables\n\nAREA_SQM <- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nAGE <- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CBD <- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CHILDCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_ELDERLYCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_URA_GROWTH_AREA <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_HAWKER_MARKET <- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_KINDERGARTEN <- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_MRT <- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PARK <- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PRIMARY_SCH <- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_TOP_PRIMARY_SCH <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 3, nrow = 4)\n\n\n\n\nDrawing Statistical Point Map\n\ntmap_mode(\"view\")\n\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz_svy21)+\n  tm_polygons() +\ntm_shape(condo_resale.sf) +  \n  tm_dots(col = \"SELLING_PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\n\nHedonic Pricing Modelling in R\nSimple Linear Regression Method\n\ncondo.slr <- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nExamining layer\n\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: < 2.2e-16\n\n\nVisualising and plotting best fit line\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n\n\n\n\n\nMultiple Linear Regression Method\nFinding correlationships between variables\nwe will be using residual for calculation\n\ncorrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")\n\n\n\n\n\n\nBuilding a hedonic pricing model using multiple linear regression method\n\ncondo.mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  < 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  < 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  < 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  < 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: < 2.2e-16\n\n\n\n\nPreparing Publication Quality Table: olsrr method\nTidy way to generate report\n\ncondo.mlr1 <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n                             Model Summary                               \n------------------------------------------------------------------------\nR                       0.807       RMSE                     755957.289 \nR-Squared               0.651       Coef. Var                    43.168 \nAdj. R-Squared          0.647       MSE                571471422208.591 \nPred R-Squared          0.638       MAE                      414819.628 \n------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\n\nPreparing Publication Quality Table: gtsummary method\n\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nPreparing report\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %>% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = <0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nChecking for multicolinearity\n\nols_vif_tol(condo.mlr1)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\nTest for non-linearity\n\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\nTest for Normality Assumption\n\nols_plot_resid_hist(condo.mlr1)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html",
    "href": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html",
    "title": "Hands-On Exercise 08",
    "section": "",
    "text": "pacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)\n\n\n\n\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\xinyeehow\\IS415-GAA\\Hands-On_Ex\\Hands-On_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nSetting CRS\n\nmpsz_svy21 <- st_transform(mpsz, 3414)\n\n\nst_crs(mpsz_svy21)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\nst_bbox(mpsz_svy21) #view extent\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334 \n\n\n\n\n\n\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n\nInspecting aspatial data\n\nglimpse(condo_resale)\n\nRows: 1,436\nColumns: 23\n$ LATITUDE             <dbl> 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            <dbl> 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             <dbl> 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\nInspecting coord column\n\nhead(condo_resale$LONGITUDE) #see the data in XCOORD column\n\n[1] 103.7802 103.8123 103.7971 103.8247 103.9505 103.9386\n\n\n\nhead(condo_resale$LATITUDE) #see the data in YCOORD column\n\n[1] 1.287145 1.328698 1.313727 1.308563 1.321437 1.314198\n\n\nDisplay summary statistics\n\nsummary(condo_resale)\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000  \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#converting-aspatial-data-frame-into-a-sf-object",
    "href": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#converting-aspatial-data-frame-into-a-sf-object",
    "title": "Hands-On Exercise 08",
    "section": "Converting aspatial data frame into a sf object",
    "text": "Converting aspatial data frame into a sf object\n\ncondo_resale.sf <- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %>%\n  st_transform(crs=3414)\n\nInspecting new sf layer\n\nhead(condo_resale.sf)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 22\n  POSTCODE SELLI…¹ AREA_…²   AGE PROX_…³ PROX_…⁴ PROX_…⁵ PROX_…⁶ PROX_…⁷ PROX_…⁸\n     <dbl>   <dbl>   <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1   118635 3000000     309    30    7.94   0.166   2.52     6.62   1.77   0.0584\n2   288420 3880000     290    32    6.61   0.280   1.93     7.51   0.545  0.616 \n3   267833 3325000     248    33    6.90   0.429   0.502    6.46   0.378  0.141 \n4   258380 4250000     127     7    4.04   0.395   1.99     4.91   1.68   0.382 \n5   467169 1400000     145    28   11.8    0.119   1.12     6.41   0.565  0.461 \n6   466472 1320000     139    22   10.3    0.125   0.789    5.09   0.781  0.0994\n# … with 12 more variables: PROX_MRT <dbl>, PROX_PARK <dbl>,\n#   PROX_PRIMARY_SCH <dbl>, PROX_TOP_PRIMARY_SCH <dbl>,\n#   PROX_SHOPPING_MALL <dbl>, PROX_SUPERMARKET <dbl>, PROX_BUS_STOP <dbl>,\n#   NO_Of_UNITS <dbl>, FAMILY_FRIENDLY <dbl>, FREEHOLD <dbl>,\n#   LEASEHOLD_99YR <dbl>, geometry <POINT [m]>, and abbreviated variable names\n#   ¹​SELLING_PRICE, ²​AREA_SQM, ³​PROX_CBD, ⁴​PROX_CHILDCARE, ⁵​PROX_ELDERLYCARE,\n#   ⁶​PROX_URA_GROWTH_AREA, ⁷​PROX_HAWKER_MARKET, ⁸​PROX_KINDERGARTEN"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#exploratory-data-analysis-eda",
    "href": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#exploratory-data-analysis-eda",
    "title": "Hands-On Exercise 08",
    "section": "Exploratory Data Analysis (EDA)",
    "text": "Exploratory Data Analysis (EDA)\nPlotting the distribution of SELLING_PRICE\n\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\nGraph looks right-skewed. Next, we can do a log transformation to reduce the skewness\n\ncondo_resale.sf <- condo_resale.sf %>%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\nPlotting chart\n\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\nLooks better.\nPlotting multiple histograms by variables\n\nAREA_SQM <- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nAGE <- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CBD <- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CHILDCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_ELDERLYCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_URA_GROWTH_AREA <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_HAWKER_MARKET <- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_KINDERGARTEN <- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_MRT <- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PARK <- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PRIMARY_SCH <- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_TOP_PRIMARY_SCH <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 3, nrow = 4)\n\n\n\n\nDrawing Statistical Point Map\n\ntmap_mode(\"view\")\n\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz_svy21)+\n  tm_polygons() +\ntm_shape(condo_resale.sf) +  \n  tm_dots(col = \"SELLING_PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\n\nHedonic Pricing Modelling in R\nSimple Linear Regression Method\n\ncondo.slr <- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nExamining layer\n\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: < 2.2e-16\n\n\nVisualising and plotting best fit line\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n\n\n\nMultiple Linear Regression Method\nFinding correlationships between variables\nwe will be using residual for calculation\n\ncorrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")\n\n\n\n\n\n\nBuilding a hedonic pricing model using multiple linear regression method\n\ncondo.mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  < 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  < 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  < 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  < 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: < 2.2e-16\n\n\n\n\nPreparing Publication Quality Table: olsrr method\nTidy way to generate report\n\ncondo.mlr1 <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n                             Model Summary                               \n------------------------------------------------------------------------\nR                       0.807       RMSE                     755957.289 \nR-Squared               0.651       Coef. Var                    43.168 \nAdj. R-Squared          0.647       MSE                571471422208.591 \nPred R-Squared          0.638       MAE                      414819.628 \n------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\n\nPreparing Publication Quality Table: gtsummary method\n\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nPreparing report\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %>% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = <0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nChecking for multicolinearity\n\nols_vif_tol(condo.mlr1)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\nTest for non-linearity\n\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\nTest for Normality Assumption\n\nols_plot_resid_hist(condo.mlr1)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "title": "Take-Home Exercise 03",
    "section": "",
    "text": "pacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary, tidymodels, SpatialML, devtools, rsample, jsonlite, units, matrixStats, ranger, Metrics)\n\npackage 'tidymodels' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\howxi\\AppData\\Local\\Temp\\RtmpySepim\\downloaded_packages\n\n\n\n\nResale data (aspatial) - obtained from https://data.gov.sg/dataset/resale-flat-prices\nConsisting of the structural factors\n\nresale <- read_csv(\"data/resale/resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv\")\n\nLocational factors:\nMaster Plan Singapore 2019 (geospatial) - Provided by prof Kam\n\nmpsz = st_read(dsn = \"data/mpsz\", layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source \n  `C:\\xinyeehow\\IS415-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\mpsz' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\nmpsz <- mpsz %>% st_transform(crs = 3414)\n\nMRT (geospatial) - obtained from https://datamall.lta.gov.sg/content/dam/datamall/datasets/Geospatial/TrainStation.zip\n\nmrt = st_read(dsn = \"data/TrainStation\", layer = \"RapidTransitSystemStation\")\n\nReading layer `RapidTransitSystemStation' from data source \n  `C:\\xinyeehow\\IS415-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\TrainStation' \n  using driver `ESRI Shapefile'\nSimple feature collection with 220 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 6068.209 ymin: 27478.44 xmax: 45377.5 ymax: 47913.58\nProjected CRS: SVY21\n\nmrt <- mrt %>% st_transform(crs = 3414)\n\n\nmrt <- mrt %>% \n  st_cast(\"MULTIPOLYGON\") %>%\n  st_make_valid()\n\nBus stops (geospatial) - obtained from https://datamall.lta.gov.sg/content/dam/datamall/datasets/Geospatial/BusStopLocation.zip\n\nbusstop = st_read(dsn = \"data/BusStop\", layer = \"BusStop\")\n\nReading layer `BusStop' from data source \n  `C:\\xinyeehow\\IS415-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\BusStop' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5159 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\nbusstop <- busstop %>% st_transform(crs = 3414)\n\nEldercare (geospatial) - obtained from https://data.gov.sg/dataset/eldercare-services\n\neldercare = st_read(dsn = \"data/eldercare\", layer = \"ELDERCARE\")\n\nReading layer `ELDERCARE' from data source \n  `C:\\xinyeehow\\IS415-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\eldercare' \n  using driver `ESRI Shapefile'\nSimple feature collection with 133 features and 18 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 28218.43 xmax: 41665.14 ymax: 46804.9\nProjected CRS: SVY21\n\neldercare <- eldercare %>% st_transform(crs = 3414)\n\nChildcare (geospatial) - obtained from https://data.gov.sg/dataset/child-care-services\n\nchildcare = st_read(dsn = \"data/childcare\", layer = \"ChildcareServices\")\n\nReading layer `ChildcareServices' from data source \n  `C:\\xinyeehow\\IS415-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\childcare' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11203.01 ymin: 25667.6 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\n\nchildcare <- childcare %>% st_transform(crs = 3414)\n\nPrimary schools - https://data.gov.sg/dataset/school-directory-and-information, geocoded into shape file\n\nschools <- st_read(dsn = \"data/Education\", layer = \"education\")\n\nReading layer `education' from data source \n  `C:\\xinyeehow\\IS415-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\Education' \n  using driver `ESRI Shapefile'\nSimple feature collection with 342 features and 15 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 103.7736 ymin: 1.276406 xmax: 103.8823 ymax: 1.427265\nGeodetic CRS:  WGS 84\n\n\nSelecting primary schools only\n\nschools <- subset(schools, mainlevel_ == \"PRIMARY\" | mainlevel_ == \"MIXED LEVELS\")\n\nTransforming into sf object\n\nschools_sf <- st_as_sf(schools, \n                      coords = c(\"Longitude\", \n                                 \"Latitude\"), \n                      crs=4326) %>%\n  st_transform(crs = 3414)\n\nGood primary schools - obtained list of top 10 schools from https://schlah.com/primary-schools, with the factors’ weightage included in the list as well\n\ngood_schools <- read_csv(\"data/Education/Good Schools.csv\")\n\nMerging location information with school directory\n\ngood_schools <- left_join(good_schools, schools, by = c(\"School\" = \"school_nam\"))\n\nTransforming into sf object\n\ngood_schools_sf <- st_as_sf(good_schools, \n                      coords = c(\"Longitude\", \n                                 \"Latitude\"), \n                      crs=4326) %>%\n  st_transform(crs = 3414)\n\nFoodcourts/hawkers, Parks, Malls, and Supermarkets data obtained from http://download.geofabrik.de/asia/malaysia-singapore-brunei.html\n\nsingapore = st_read(dsn = \"data/singapore\", layer = \"Singapore_POIS\")\n\nReading layer `Singapore_POIS' from data source \n  `C:\\xinyeehow\\IS415-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\singapore' \n  using driver `ESRI Shapefile'\nSimple feature collection with 18687 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3699.08 ymin: 22453.07 xmax: 52883.86 ymax: 50153.8\nProjected CRS: SVY21 / Singapore TM\n\nsingapore <- singapore %>% st_transform(crs = 3414)\n\nSubsetting Foodcourts and hawkers\n\nfoodcourts <- subset(singapore, fclass == \"food_court\")\n\nParks\n\nparks <- subset(singapore, fclass == \"park\")\n\nShopping malls\n\nmalls <- subset(singapore, fclass == \"mall\")\n\nSupermarkets\n\nsupermarkets <- subset(singapore, fclass == \"supermarket\")\n\nCBD - Setting the CBD to be at Downtown Core for this analysis’ purpose\n\nlat <- 1.287953\nlng <- 103.851784\n\ncbd_sf <- data.frame(lat, lng) %>%\n  st_as_sf(coords = c(\"lng\", \"lat\"), crs=4326) %>%\n  st_transform(crs=3414)\n\n\n\n\nResale Flats (looking at 5 rooms between 1st January 2021 to 31st December 2022, since it’s more ideal for families)\n\nresale <- resale %>%\n  filter(flat_type == \"5 ROOM\") %>%\n  filter(month >= \"2021-01\" & month <= \"2022-12\")\n\nNow, we need to retrieve postal codes using OneMap API in order to get the longitude and latitude values\nTransforming ST. to SAINT to match OneMap’s API\n\nresale$street_name <- gsub(\"ST\\\\.\", \"SAINT\", resale$street_name)\n\nReplacing NA values with 0\n\nresale$remaining_lease[is.na(resale$remaining_lease)] <- 0\n\nSetting up OneMap’s API\n\nlibrary(httr)\ngeocode <- function(block, streetname) {\n  base_url <- \"https://developers.onemap.sg/commonapi/search\"\n  address <- paste(block, streetname, sep = \" \")\n  query <- list(\"searchVal\" = address, \n                \"returnGeom\" = \"Y\",\n                \"getAddrDetails\" = \"N\",\n                \"pageNum\" = \"1\")\n  \n  res <- GET(base_url, query = query)\n  restext<-content(res, as=\"text\")\n  \n  output <- fromJSON(restext)  %>% \n    as.data.frame %>%\n    select(results.LATITUDE, results.LONGITUDE)\n\n  return(output)\n}\n\nGeocoding latitude and longitude values\n\nresale$LATITUDE <- 0\nresale$LONGITUDE <- 0\n\nfor (i in 1:nrow(resale)){\n  temp_output <- geocode(resale[i, 4], resale[i, 5])\n  \n  resale$LATITUDE[i] <- temp_output$results.LATITUDE\n  resale$LONGITUDE[i] <- temp_output$results.LONGITUDE\n}\n\nwrite.csv(resale, \"data/resale/resale.csv\")\n\nBringing in previously ran outputs\n\nresale <- read_csv(\"data/resale/resale.csv\")\n\nTransforming remaining lease column into numeric values\n\nstr_list <- str_split(resale$remaining_lease, \" \")\n\nfor (i in 1:length(str_list)) {\n  if (length(unlist(str_list[i])) > 2) {\n      year <- as.numeric(unlist(str_list[i])[1])\n      month <- as.numeric(unlist(str_list[i])[3])\n      resale$remaining_lease[i] <- year + round(month/12, 2)\n  }\n  else {\n    year <- as.numeric(unlist(str_list[i])[1])\n    resale$remaining_lease[i] <- year\n  }\n}\n\nTransforming into sf object and into desired projection\n\nresale_sf <- st_as_sf(resale, \n                      coords = c(\"LONGITUDE\", \n                                 \"LATITUDE\"), \n                      crs=4326) %>%\n  st_transform(crs = 3414)\n\nProximity Distance Calculation\n\nproximity <- function(df1, df2, varname) {\n  dist_matrix <- st_distance(df1, df2) %>%\n    drop_units()\n  df1[,varname] <- rowMins(dist_matrix)\n  return(df1)\n}\n\n\nresale_sf <- \n  proximity(resale_sf, cbd_sf, \"PROX_CBD\") %>%\n  proximity(., childcare, \"PROX_CHILDCARE\") %>%\n  proximity(., eldercare, \"PROX_ELDERCARE\") %>%\n  proximity(., foodcourts, \"PROX_FOODCOURT\") %>%\n  proximity(., mrt, \"PROX_MRT\") %>%\n  proximity(., busstop, \"PROX_BUSSTOP\") %>%\n  proximity(., parks, \"PROX_PARK\") %>%\n  proximity(., good_schools_sf, \"PROX_TOPPRISCH\") %>%\n  proximity(., malls, \"PROX_MALL\") %>%\n  proximity(., supermarkets, \"PROX_SPRMKT\") %>%\n  proximity(., schools_sf, \"PROX_PRISCH\")\n\nFacility count within radius\n\nnum_radius <- function(df1, df2, varname, radius) {\n  dist_matrix <- st_distance(df1, df2) %>%\n    drop_units() %>%\n    as.data.frame()\n  df1[,varname] <- rowSums(dist_matrix <= radius)\n  return(df1)\n}\n\n\nresale_sf <- \n  num_radius(resale_sf, childcare, \"NUM_CHILDCARE\", 350) %>%\n  num_radius(., busstop, \"NUM_BUSSTOP\", 350) %>%\n  num_radius(., schools_sf, \"NUM_PRISCH\", 1000)\n\nSaving dataset\n\nresale_sf <- resale_sf %>%\n  mutate() %>%\n  rename(\"AREA_SQM\" = \"floor_area_sqm\", \n         \"LEASE_YRS\" = \"remaining_lease\", \n         \"PRICE\"= \"resale_price\") %>%\n  relocate(`PRICE`)\n\n\nst_write(resale_sf, \"data/resale/resale_final.shp\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#exploratory-data-analysis-eda",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#exploratory-data-analysis-eda",
    "title": "Take-Home Exercise 03",
    "section": "Exploratory Data Analysis (EDA)",
    "text": "Exploratory Data Analysis (EDA)\nBringing in saved layer\n\nresale_sf = st_read(dsn = \"data/resale\", layer = \"resale_final\")\n\nReading layer `resale_final' from data source \n  `C:\\xinyeehow\\IS415-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\resale' \n  using driver `ESRI Shapefile'\nSimple feature collection with 14519 features and 26 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6958.193 ymin: 28157.26 xmax: 42645.18 ymax: 48741.06\nProjected CRS: SVY21 / Singapore TM\n\n\nConverting LEASE info into numeric format from string format\n\nresale_sf$LEASE_Y <- as.numeric(resale_sf$LEASE_Y)\n\nDistribution of selling prices of 5-room flats\n\nggplot(data=resale_sf, aes(x=`PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\") +\n    labs(title = \"Distribution of Resale Prices\",\n         x = \"Resale Prices\",\n         y = 'Frequency')\n\n\n\n\nWe see that the distribution is right-skewed. We will now use log-transformation to normalise the skewness\n\nresale_sf <- resale_sf %>%\n  mutate(`LOG_PRICE` = log(PRICE))\n\nggplot(data = resale_sf, aes(x=`LOG_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\") +\n  labs(title = \"Distribution of Resale Prices (Log)\",\n       x = \"Resale Prices\",\n       y = 'Frequency')\n\n\n\n\nWe can still see that the distribution is right skewed. That could mean that there are a lot of outliers with much higher transaction prices.\n\nsummary(resale_sf$PRICE)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 350000  528000  595000  627297  690000 1418000 \n\n\nOur conclusion is confirmed by the statistics above.\nPlotting the locations of the transactions\n\ntmap_mode(\"view\")\ntmap_options(check.and.fix = TRUE)\ntm_shape(resale_sf) +  \n  tm_dots(col = \"PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  # sets minimum zoom level to 11, sets maximum zoom level to 14\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\nFrom the plot above, we can conclude that the areas in the south and central of Singapore tend to have higher resale transactions for 5-room flats."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#linear-regression",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#linear-regression",
    "title": "Take-Home Exercise 03",
    "section": "Linear regression",
    "text": "Linear regression\nSimple linear regression model with price as our dependent variable and area_sqm as our independent variable\n\nresale_slr <- lm(formula=PRICE ~ AREA_SQ, data = resale_sf)\n\n\nsummary(resale_slr)\n\n\nCall:\nlm(formula = PRICE ~ AREA_SQ, data = resale_sf)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-277295  -99351  -32417   62672  790677 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 6.266e+05  1.953e+04  32.092   <2e-16 ***\nAREA_SQ     5.565e+00  1.660e+02   0.034    0.973    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 146100 on 14517 degrees of freedom\nMultiple R-squared:  7.741e-08, Adjusted R-squared:  -6.881e-05 \nF-statistic: 0.001124 on 1 and 14517 DF,  p-value: 0.9733\n\n\nR-squared value obtained is less than 0.001, which means the model is not useful in predicting the price of 5-room models.\nBest fit line graph\n\nggplot(data=resale_sf,  \n       aes(x=`AREA_SQ`, y=`PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n\n\n\nValues are too varied, not reliable!\nNow let’s build a multiple regression model\n\nMultiple regression model\nPlotting correlation plot to determine multicollinearity\n\nresale_nogeom_sf <- resale_sf %>%\n  st_drop_geometry() %>%\n  dplyr::select(c(1,9,12:26))\n\n\ncorrplot(cor(resale_nogeom_sf), diag = FALSE, order = \"AOE\",\n         t1.pos = \"td\",\n         t1.cex = 0.5,\n         method = \"number\",\n         type = \"upper\")\n\n\n\n\nHigh correlation between malls and CBD, so let’s proceed to drop them\n\ndrops <- c(\"PROX_MA\")\nresale_sf <- resale_sf[ , !(names(resale_sf) %in% drops)]\n\n\ndrops <- c(\"PROX_CB\")\nresale_sf <- resale_sf[ , !(names(resale_sf) %in% drops)]\n\n\n\nSplitting test and train data\nSetting train data to be 6 months from March 2022 to September 2022\n\ntrain_data <- resale_sf %>%\n  filter(month >= \"2022-03\" & month <= \"2022-09\")\n\n\ntest_data <- resale_sf %>%\n  filter(month >= \"2022-10\" & month <= \"2022-12\")\n\n\nwrite_rds(train_data, \"data/model/train_data.rds\")\nwrite_rds(test_data, \"data/model/test_data.rds\")\n\nRetrieving stored data\n\ntrain_data <- read_rds(\"data/model/train_data.rds\")\ntest_data <- read_rds(\"data/model/test_data.rds\")\n\nNon-spatial multiple regression model\n\nresale_mlr <- lm(formula = PRICE ~ AREA_SQ + LEASE_Y + stry_rn +\n                   PROX_CH + PROX_EL + PROX_FO + PROX_MR + \n                   PROX_BU + PROX_PA + PROX_TO + PROX_SP +\n                   PROX_PR + NUM_PRI + NUM_CHI + NUM_BUS, \n                 data = train_data)\n\nsummary(resale_mlr)\n\n\nCall:\nlm(formula = PRICE ~ AREA_SQ + LEASE_Y + stry_rn + PROX_CH + \n    PROX_EL + PROX_FO + PROX_MR + PROX_BU + PROX_PA + PROX_TO + \n    PROX_SP + PROX_PR + NUM_PRI + NUM_CHI + NUM_BUS, data = train_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-278723  -51153   -9787   41165  491620 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(>|t|)    \n(Intercept)     -1.984e+05  3.506e+04  -5.660 1.62e-08 ***\nAREA_SQ          5.105e+03  2.264e+02  22.543  < 2e-16 ***\nLEASE_Y          5.976e+03  1.411e+02  42.357  < 2e-16 ***\nstry_rn04 TO 06  2.416e+04  4.157e+03   5.811 6.69e-09 ***\nstry_rn07 TO 09  4.215e+04  4.149e+03  10.161  < 2e-16 ***\nstry_rn10 TO 12  5.129e+04  4.356e+03  11.776  < 2e-16 ***\nstry_rn13 TO 15  6.467e+04  4.806e+03  13.456  < 2e-16 ***\nstry_rn16 TO 18  9.350e+04  5.987e+03  15.616  < 2e-16 ***\nstry_rn19 TO 21  1.265e+05  7.922e+03  15.968  < 2e-16 ***\nstry_rn22 TO 24  1.443e+05  9.338e+03  15.451  < 2e-16 ***\nstry_rn25 TO 27  1.810e+05  1.184e+04  15.290  < 2e-16 ***\nstry_rn28 TO 30  2.111e+05  1.650e+04  12.798  < 2e-16 ***\nstry_rn31 TO 33  2.926e+05  2.335e+04  12.530  < 2e-16 ***\nstry_rn34 TO 36  2.701e+05  2.343e+04  11.527  < 2e-16 ***\nstry_rn37 TO 39  3.127e+05  3.036e+04  10.299  < 2e-16 ***\nstry_rn40 TO 42  5.116e+05  5.635e+04   9.079  < 2e-16 ***\nstry_rn46 TO 48  6.390e+05  4.602e+04  13.885  < 2e-16 ***\nPROX_CH          6.399e+01  1.222e+01   5.238 1.71e-07 ***\nPROX_EL         -2.445e+00  2.089e+00  -1.170   0.2419    \nPROX_FO         -5.444e+01  4.631e+00 -11.757  < 2e-16 ***\nPROX_MR         -1.671e+01  3.711e+00  -4.504 6.84e-06 ***\nPROX_BU         -2.280e+01  2.354e+01  -0.968   0.3330    \nPROX_PA         -1.962e+00  4.733e-01  -4.146 3.46e-05 ***\nPROX_TO         -2.680e+01  7.754e-01 -34.561  < 2e-16 ***\nPROX_SP         -4.254e+01  8.434e+00  -5.044 4.76e-07 ***\nPROX_PR         -1.421e+01  6.183e-01 -22.983  < 2e-16 ***\nNUM_PRI          1.477e+04  2.016e+03   7.326 2.84e-13 ***\nNUM_CHI         -3.171e+03  6.588e+02  -4.813 1.54e-06 ***\nNUM_BUS          1.112e+03  4.683e+02   2.374   0.0176 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 79270 on 4084 degrees of freedom\nMultiple R-squared:  0.6994,    Adjusted R-squared:  0.6974 \nF-statistic: 339.4 on 28 and 4084 DF,  p-value: < 2.2e-16\n\n\n\nwrite_rds(resale_mlr, \"data/model/resale_mlr.rds\" ) \n\nPrediction using OLS method\n\nresale_mlr <- lm(formula = PRICE ~ AREA_SQ + LEASE_Y +\n                   PROX_CH + PROX_EL + PROX_FO + PROX_MR + \n                   PROX_BU + PROX_PA + PROX_TO + PROX_SP +\n                   PROX_PR + NUM_PRI + NUM_CHI + NUM_BUS,\n                 data = resale_nogeom_sf)\nols_regress(resale_mlr)\n\n                            Model Summary                              \n----------------------------------------------------------------------\nR                       0.734       RMSE                    99329.030 \nR-Squared               0.538       Coef. Var                  15.834 \nAdj. R-Squared          0.538       MSE                9866256274.328 \nPred R-Squared          0.536       MAE                     74867.602 \n----------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares           DF       Mean Square       F          Sig. \n--------------------------------------------------------------------------------\nRegression    1.667916e+14           14      1.191368e+13    1207.518    0.0000 \nResidual      1.431002e+14        14504    9866256274.328                       \nTotal         3.098918e+14        14518                                         \n--------------------------------------------------------------------------------\n\n                                        Parameter Estimates                                         \n---------------------------------------------------------------------------------------------------\n      model         Beta    Std. Error    Std. Beta       t        Sig         lower         upper \n---------------------------------------------------------------------------------------------------\n(Intercept)    59297.199     22875.201                   2.592    0.010    14458.887    104135.512 \n    AREA_SQ     3188.567       147.439        0.159     21.626    0.000     2899.568      3477.566 \n    LEASE_Y     6172.896        93.995        0.507     65.672    0.000     5988.654      6357.139 \n    PROX_CH      116.081         7.232        0.096     16.051    0.000      101.905       130.257 \n    PROX_EL       -5.466         1.406       -0.024     -3.888    0.000       -8.221        -2.711 \n    PROX_FO      -62.421         3.168       -0.122    -19.704    0.000      -68.631       -56.211 \n    PROX_MR      -14.833         2.468       -0.038     -6.009    0.000      -19.671        -9.995 \n    PROX_BU      -41.891        15.841       -0.017     -2.644    0.008      -72.942       -10.840 \n    PROX_PA        0.273         0.312        0.007      0.876    0.381       -0.338         0.884 \n    PROX_TO      -31.073         0.496       -0.499    -62.695    0.000      -32.044       -30.101 \n    PROX_SP      -40.147         5.615       -0.043     -7.150    0.000      -51.152       -29.141 \n    PROX_PR      -17.507         0.404       -0.337    -43.285    0.000      -18.300       -16.714 \n    NUM_PRI    16970.092      1359.735        0.095     12.480    0.000    14304.838     19635.346 \n    NUM_CHI    -3493.926       444.310       -0.049     -7.864    0.000    -4364.830     -2623.023 \n    NUM_BUS      413.029       312.420        0.009      1.322    0.186     -199.353      1025.412 \n---------------------------------------------------------------------------------------------------\n\n\n\nresale_mlr_pred <- predict(resale_mlr, data = train_data)\n\nsummary(resale_mlr_pred)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 319799  558783  615654  627297  681438 1034589 \n\n\n\ntbl_regression(resale_mlr, intercept = TRUE)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n59,297\n14,459, 104,136\n0.010\n    AREA_SQ\n3,189\n2,900, 3,478\n<0.001\n    LEASE_Y\n6,173\n5,989, 6,357\n<0.001\n    PROX_CH\n116\n102, 130\n<0.001\n    PROX_EL\n-5.5\n-8.2, -2.7\n<0.001\n    PROX_FO\n-62\n-69, -56\n<0.001\n    PROX_MR\n-15\n-20, -10\n<0.001\n    PROX_BU\n-42\n-73, -11\n0.008\n    PROX_PA\n0.27\n-0.34, 0.88\n0.4\n    PROX_TO\n-31\n-32, -30\n<0.001\n    PROX_SP\n-40\n-51, -29\n<0.001\n    PROX_PR\n-18\n-18, -17\n<0.001\n    NUM_PRI\n16,970\n14,305, 19,635\n<0.001\n    NUM_CHI\n-3,494\n-4,365, -2,623\n<0.001\n    NUM_BUS\n413\n-199, 1,025\n0.2\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nChecking for multicollinearity\n\nols_vif_tol(resale_mlr)\n\n   Variables Tolerance      VIF\n1    AREA_SQ 0.5859146 1.706733\n2    LEASE_Y 0.5332502 1.875292\n3    PROX_CH 0.8832071 1.132237\n4    PROX_EL 0.8088947 1.236255\n5    PROX_FO 0.8316944 1.202365\n6    PROX_MR 0.7888073 1.267737\n7    PROX_BU 0.8100352 1.234514\n8    PROX_PA 0.5376632 1.859900\n9    PROX_TO 0.5026562 1.989431\n10   PROX_SP 0.8626090 1.159274\n11   PROX_PR 0.5257821 1.901928\n12   NUM_PRI 0.5466689 1.829261\n13   NUM_CHI 0.8099186 1.234692\n14   NUM_BUS 0.7442748 1.343590\n\n\nSince none of the variables have a VIF value more than 10, we can conclude that there are no signs of multicollinearities among the variables.\nTest for non-linearity\n\nols_plot_resid_fit(resale_mlr)\n\n\n\n\nWe can observe that most of the points lies near the 0 line from the plot above, and we can conclude that the relationship between the independent and dependent variables are linear."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#grw-predictive-method",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#grw-predictive-method",
    "title": "Take-Home Exercise 03",
    "section": "GRW Predictive method",
    "text": "GRW Predictive method\nConverting train data into spatial data\n\ntrain_data_sp <- as_Spatial(train_data)\ntrain_data_sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 4113 \nextent      : 6958.193, 42645.18, 28299.14, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 25\nnames       :   PRICE, X___1,   month,       town, flt_typ, block,      strt_nm,  stry_rn, AREA_SQ, flt_mdl, ls_cmm_, LEASE_Y,           PROX_CH,           PROX_EL,          PROX_FO, ... \nmin values  :   4e+05,  7805, 2022-03, ANG MO KIO,  5 ROOM,     1, ADMIRALTY DR, 01 TO 03,      99,    3Gen,    1972,   49.25, 0.000104604717071, 0.001038255324477,   8.054189158654, ... \nmax values  : 1418000, 14514, 2022-09,     YISHUN,  5 ROOM,    9B,      ZION RD, 46 TO 48,     159, Type S2,    2019,   96.08,  4567.62297455935,  8265.97091415839, 1904.41400290072, ... \n\n\n\ntrain_nogeom_sp <- train_data_sp %>%\n  st_drop_geometry()\n\nComputing adaptive bandwidth\n\nbw_adaptive <- bw.gwr(PRICE ~ AREA_SQ + LEASE_Y + stry_rn +\n                   PROX_CH + PROX_EL + PROX_FO + PROX_MR + \n                   PROX_BU + PROX_PA + PROX_TO + PROX_SP +\n                   PROX_PR + NUM_PRI + NUM_CHI + NUM_BUS,\n                  data=train_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n\nSaving bw_adaptive output\n\nwrite_rds(bw_adaptive, file = \"data/model/bw_adaptive.rds\")\n\nBringing in previously ran data\n\nbw_adaptive <- read_rds(\"data/model/bw_adaptive.rds\")\nbw_adaptive\n\n[1] 235\n\n\nCalculating GWR adaptive\n\ngwr_adaptive <- gwr.basic(formula = PRICE ~ AREA_SQ + LEASE_Y + stry_rn +\n                   PROX_CH + PROX_EL + PROX_FO + PROX_MR + \n                   PROX_BU + PROX_PA + PROX_TO + PROX_SP +\n                   PROX_PR + NUM_PRI + NUM_CHI + NUM_BUS,\n                   data = train_data_sp,\n                          bw=bw_adaptive, \n                          kernel = 'gaussian', \n                    \n                          adaptive=TRUE,\n                          longlat = FALSE)\nwrite_rds(gwr_adaptive, \"data/model/gwr_adaptive.rds\")\n\nBringing in previously ran outputs\n\ngwr_adaptive <- read_rds(\"data/model/gwr_adaptive.rds\")\ngwr_adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2023-03-19 22:36:43 \n   Call:\n   gwr.basic(formula = PRICE ~ AREA_SQ + LEASE_Y + stry_rn + PROX_CH + \n    PROX_EL + PROX_FO + PROX_MR + PROX_BU + PROX_PA + PROX_TO + \n    PROX_SP + PROX_PR + NUM_PRI + NUM_CHI + NUM_BUS, data = train_data_sp, \n    bw = bw_adaptive, kernel = \"gaussian\", adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  PRICE\n   Independent variables:  AREA_SQ LEASE_Y stry_rn PROX_CH PROX_EL PROX_FO PROX_MR PROX_BU PROX_PA PROX_TO PROX_SP PROX_PR NUM_PRI NUM_CHI NUM_BUS\n   Number of data points: 9437\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n    Min      1Q  Median      3Q     Max \n-313109  -59170   -5999   50243  570049 \n\n   Coefficients:\n                     Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)     -9.914e+04  2.544e+04  -3.896 9.84e-05 ***\n   AREA_SQ          4.138e+03  1.635e+02  25.311  < 2e-16 ***\n   LEASE_Y          5.399e+03  1.044e+02  51.709  < 2e-16 ***\n   stry_rn04 TO 06  2.676e+04  3.013e+03   8.880  < 2e-16 ***\n   stry_rn07 TO 09  4.648e+04  3.036e+03  15.309  < 2e-16 ***\n   stry_rn10 TO 12  5.131e+04  3.111e+03  16.491  < 2e-16 ***\n   stry_rn13 TO 15  6.486e+04  3.493e+03  18.566  < 2e-16 ***\n   stry_rn16 TO 18  9.281e+04  4.355e+03  21.314  < 2e-16 ***\n   stry_rn19 TO 21  1.279e+05  5.930e+03  21.576  < 2e-16 ***\n   stry_rn22 TO 24  1.567e+05  6.739e+03  23.258  < 2e-16 ***\n   stry_rn25 TO 27  1.789e+05  8.933e+03  20.033  < 2e-16 ***\n   stry_rn28 TO 30  2.350e+05  1.276e+04  18.427  < 2e-16 ***\n   stry_rn31 TO 33  3.006e+05  1.629e+04  18.449  < 2e-16 ***\n   stry_rn34 TO 36  3.518e+05  1.750e+04  20.101  < 2e-16 ***\n   stry_rn37 TO 39  3.574e+05  1.821e+04  19.626  < 2e-16 ***\n   stry_rn40 TO 42  4.946e+05  2.448e+04  20.205  < 2e-16 ***\n   stry_rn43 TO 45  4.792e+05  5.060e+04   9.471  < 2e-16 ***\n   stry_rn46 TO 48  6.006e+05  3.925e+04  15.304  < 2e-16 ***\n   PROX_CH          1.050e+02  7.048e+00  14.895  < 2e-16 ***\n   PROX_EL         -1.297e+00  1.530e+00  -0.847   0.3968    \n   PROX_FO         -4.704e+01  3.488e+00 -13.485  < 2e-16 ***\n   PROX_MR         -1.652e+01  2.701e+00  -6.115 1.00e-09 ***\n   PROX_BU         -2.470e+01  1.748e+01  -1.413   0.1578    \n   PROX_PA         -1.278e+00  3.434e-01  -3.721   0.0002 ***\n   PROX_TO         -2.555e+01  5.552e-01 -46.015  < 2e-16 ***\n   PROX_SP         -4.115e+01  6.150e+00  -6.691 2.34e-11 ***\n   PROX_PR         -1.306e+01  4.506e-01 -28.988  < 2e-16 ***\n   NUM_PRI          1.682e+04  1.482e+03  11.351  < 2e-16 ***\n   NUM_CHI         -2.497e+03  4.895e+02  -5.101 3.45e-07 ***\n   NUM_BUS          4.980e+02  3.415e+02   1.458   0.1448    \n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 87420 on 9407 degrees of freedom\n   Multiple R-squared: 0.6386\n   Adjusted R-squared: 0.6375 \n   F-statistic: 573.2 on 29 and 9407 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 7.189156e+13\n   Sigma(hat): 87290.71\n   AIC:  241570.5\n   AICc:  241570.7\n   BIC:  232639\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 235 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                          Min.     1st Qu.      Median     3rd Qu.       Max.\n   Intercept       -3.0200e+06 -8.1228e+05 -2.9186e+05  3.5031e+03 3.6752e+06\n   AREA_SQ         -4.4561e+03  2.6658e+03  4.0433e+03  5.7884e+03 1.5072e+04\n   LEASE_Y          2.0186e+02  4.9176e+03  6.1000e+03  7.2406e+03 1.0368e+04\n   stry_rn04.TO.06  1.0232e+04  1.8639e+04  2.3358e+04  2.8510e+04 4.4959e+04\n   stry_rn07.TO.09  2.5919e+04  3.6260e+04  4.2026e+04  5.1899e+04 9.0669e+04\n   stry_rn10.TO.12  2.8938e+04  4.3445e+04  4.9558e+04  6.2359e+04 9.5524e+04\n   stry_rn13.TO.15  3.7078e+04  5.1438e+04  6.0017e+04  7.6112e+04 1.3365e+05\n   stry_rn16.TO.18 -1.5579e+05  5.8940e+04  7.6080e+04  1.0657e+05 1.6322e+05\n   stry_rn19.TO.21 -2.9276e+05  7.3154e+04  9.1650e+04  1.2268e+05 3.6835e+05\n   stry_rn22.TO.24 -4.1194e+05  8.5428e+04  1.2067e+05  1.5303e+05 4.1617e+05\n   stry_rn25.TO.27 -6.4380e+05  7.7852e+04  1.2725e+05  1.6289e+05 7.1261e+05\n   stry_rn28.TO.30 -8.5810e+05  1.2028e+05  2.0355e+05  2.9042e+05 5.6957e+05\n   stry_rn31.TO.33 -9.1198e+05  1.2536e+05  2.1880e+05  3.1900e+05 1.2315e+06\n   stry_rn34.TO.36 -1.0388e+05  2.8378e+05  4.0355e+05  5.1603e+05 1.2906e+06\n   stry_rn37.TO.39 -1.3407e+05  2.4727e+05  3.3383e+05  4.8551e+05 1.2523e+06\n   stry_rn40.TO.42 -1.8271e+06  3.6314e+05  4.6673e+05  6.5058e+05 1.7713e+06\n   stry_rn43.TO.45 -3.3122e+06  3.6545e+05  5.4278e+05  7.0935e+05 3.0379e+06\n   stry_rn46.TO.48 -2.0366e+06  5.2511e+05  6.0480e+05  7.3673e+05 2.5576e+06\n   PROX_CH         -2.4503e+02 -4.2375e+01  1.1423e+01  5.1692e+01 1.6033e+02\n   PROX_EL         -6.8816e+01 -1.3846e+01  6.7214e+00  2.9319e+01 1.8220e+02\n   PROX_FO         -1.3728e+02 -5.6427e+01 -3.5018e+01 -7.3794e+00 9.3581e+01\n   PROX_MR         -1.8948e+02 -8.4182e+01 -5.0445e+01 -2.9165e+01 7.9122e+01\n   PROX_BU         -3.8127e+02 -2.2305e+01  2.1902e+01  9.8272e+01 3.2268e+02\n   PROX_PA         -2.9461e+02 -2.8777e+01  7.9209e+00  6.7292e+01 8.3100e+02\n   PROX_TO         -9.1676e+02 -4.1495e+01 -3.7385e+00  5.3950e+01 9.0907e+02\n   PROX_SP         -1.5798e+02 -4.9068e+01 -1.8385e+01  1.5569e+01 1.1211e+02\n   PROX_PR         -6.3029e+02 -5.8135e+01 -4.9329e+00  2.0667e+01 2.5248e+02\n   NUM_PRI         -1.5124e+06 -7.3391e+03  1.7045e+04  8.4198e+04 1.3702e+06\n   NUM_CHI         -6.6886e+03 -1.0608e+03  8.3713e+02  2.6145e+03 1.7163e+04\n   NUM_BUS         -6.8001e+03 -1.8350e+03 -2.9479e+02  1.3620e+03 5.9301e+03\n   ************************Diagnostic information*************************\n   Number of data points: 9437 \n   Effective number of parameters (2trace(S) - trace(S'S)): 583.0149 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 8853.985 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 233134.1 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 232637.4 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 226864.4 \n   Residual sum of squares: 2.677563e+13 \n   R-square value:  0.865401 \n   Adjusted R-square value:  0.856537 \n\n   ***********************************************************************\n   Program stops at: 2023-03-19 22:44:19 \n\n\nR square value is 0.8565, which means it can predict around 85% of the data. This is pretty high\n\nCoordinates data\nPreparing coordinates data\n\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\n\nSaving coordinates data\n\ncoords_train <- write_rds(coords_train, \"data/model/coords_train.rds\")\ncoords_test <- write_rds(coords_test, \"data/model/coords_test.rds\")\n\nBringing in saved coordinates data\n\ncoords_train <- read_rds(\"data/model/coords_train.rds\")\ncoords_test <- read_rds(\"data/model/coords_test.rds\")\n\nDropping geometric fields - to prep for random forest data\n\ntrain_data_nogeom <- train_data %>%\n  st_drop_geometry()\n\nSaving output\n\nwrite_rds(train_data_nogeom, \"data/model/train_data_nogeom.rds\")\n\nBringing in saved train data\n\ntrain_data_nogeom <- read_rds(\"data/model/train_data_nogeom.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calibrating-random-forest-model",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calibrating-random-forest-model",
    "title": "Take-Home Exercise 03",
    "section": "Calibrating Random Forest Model",
    "text": "Calibrating Random Forest Model\nUsing ranger package\n\nset.seed(1234)\nrf <- ranger(PRICE ~ AREA_SQ + LEASE_Y + stry_rn +\n                   PROX_CH + PROX_EL + PROX_FO + PROX_MR + \n                   PROX_BU + PROX_PA + PROX_TO + PROX_SP +\n                   PROX_PR + NUM_PRI + NUM_CHI + NUM_BUS,\n             data=train_data_nogeom)\n\n\nprint(rf)\n\nRanger result\n\nCall:\n ranger(PRICE ~ AREA_SQ + LEASE_Y + stry_rn + PROX_CH + PROX_EL +      PROX_FO + PROX_MR + PROX_BU + PROX_PA + PROX_TO + PROX_SP +      PROX_PR + NUM_PRI + NUM_CHI + NUM_BUS, data = train_data_nogeom) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      4113 \nNumber of independent variables:  15 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       1912577810 \nR squared (OOB):                  0.9078936 \n\n\nCalculating ranger bandwidth\n\ngwRF_bw <- grf.bw(formula = PRICE ~ AREA_SQ + LEASE_Y + stry_rn +\n                   PROX_CH + PROX_EL + PROX_FO + PROX_MR + \n                   PROX_BU + PROX_PA + PROX_TO + PROX_SP +\n                   PROX_PR + NUM_PRI + NUM_CHI + NUM_BUS,\n                data = train_data_nogeom,\n                kernel = \"adaptive\",\n                trees = 30,\n                coords = coords_train\n                )\nwrite_rds(gwRF_bw, \"data/model/gwRF_bw.rds\")\n\nBringing in previously saved outputs\n\ngwRF_bw <- read_rds(\"data/model/gwRF_bw.rds\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html",
    "href": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html",
    "title": "In-Class Exercise 09",
    "section": "",
    "text": "Installing packages\nImporting data\nBuilding a non-spatial MLR\npredictive model - only r-squared value important\nSaving data into file"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#gwr-predictive-method",
    "href": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#gwr-predictive-method",
    "title": "In-Class Exercise 09",
    "section": "GWR predictive method",
    "text": "GWR predictive method\n\nConverting sf dataframe to SpatialPointDataFrame\nsf is a list object –> in order for package “ranger” to run, we need to extract and convert\n\ntrain_data_sp <- as_Spatial(train_data)\ntrain_data_sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 10335 \nextent      : 11597.31, 42623.63, 28217.39, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 17\nnames       : resale_price, floor_area_sqm, storey_order, remaining_lease_mths,          PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,            PROX_CHAS,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, ... \nmin values  :       218000,             74,            1,                  555, 0.999393538715878, 1.98943787433087e-08, 0.0333358643817954, 0.0220407324774434, 0.0441643212802781, 0.0652540365486641,                0, 6.20621206270077e-09, 1.21715176356525e-07,                        0,                     0, ... \nmax values  :      1186888,            133,           17,                 1164,  19.6500691667807,     3.30163731686804,   2.86763031236184,   2.13060636038504,   2.41313695915468,   10.6223726149914, 2.27100643784442,    0.808332738794272,     1.57131703651196,                        7,                    20, ... \n\n\n\n\nComputing adaptive bandwidth\n\nbw_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n\nPreparing coordinates data\nExtracting coordinates data\n\ncoords <- st_coordinates(mdata)\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\n\nSaving output for future use\n\ncoords_train <- write_rds(coords_train, \"data/model/coords_train.rds\")\ncoords_test <- write_rds(coords_test, \"data/model/coords_test.rds\")\n\nDropping geometry field\n\ntrain_data <- train_data %>% st_drop_geometry()\n\nCalibrating random forest - using Ranger\n\nset.seed(1234)\nrf <- ranger(resale_price ~ floor_area_sqm +\n                 storey_order + remaining_lease_mths +\n                 PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT +\n                 PROX_PARK + PROX_MALL + PROX_SUPERMARKET + \n                 WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + \n                 WITHIN_350M_BUS + WITHIN_1KM_PRISCH,\n               data= train_data)\nsummary(rf)\n\nusing spatialML package\n\nset.seed(1234)\ngwRF_adaptive <- grf(formula = resale_price ~ floor_area_sqm +\n                 storey_order + remaining_lease_mths +\n                 PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT +\n                 PROX_PARK + PROX_MALL + PROX_SUPERMARKET + \n                 WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + \n                 WITHIN_350M_BUS + WITHIN_1KM_PRISCH,\n               dframe= train_data, \n               bw=55, #need to calculate this out\n               kernel=\"adaptive\",\n               coords=coords_train)\n\nSaving output for future use\n\nwrite_rds(gwRF_adaptive, \"data/model/gwRF_adaptive.rds\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#predicting-using-test-data",
    "href": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#predicting-using-test-data",
    "title": "In-Class Exercise 09",
    "section": "Predicting using test data",
    "text": "Predicting using test data\n\nPreparing test data\n\ntest_data <- cbind(test_data, coords_test) %>% st_drop_geometry()\n\n\nPredicting with test data\ncoordinates -> only can calibrate SVY21 values\noutput is a vector\n\ngwRF_pred <- predict.grf(gwRF_adaptive,\n                         test_data,\n                         x.var.name=\"X\",\n                         y.var.name = \"Y\",\n                         local.w=1,\n                         global.w=0)\n\nConverting predicting output into data frame"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html",
    "href": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html",
    "title": "In-Class Exercise 10",
    "section": "",
    "text": "Installing packages\n\npacman::p_load(tmap, SpatialAcc, sf, \n               ggstatsplot, reshape2,\n               tidyverse)\n\npackage 'dplyr' successfully unpacked and MD5 sums checked\npackage 'ggstatsplot' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\howxi\\AppData\\Local\\Temp\\Rtmp4MRte9\\downloaded_packages\n\n\nImporting Geospatial data\n\nmpsz <- st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_NO_SEA_PL\")\n\nReading layer `MP14_SUBZONE_NO_SEA_PL' from data source \n  `C:\\xinyeehow\\IS415-GAA\\In-Class_Ex\\In-Class_Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nhexagons <- st_read(dsn = \"data/geospatial\", layer = \"hexagons\") \n\nReading layer `hexagons' from data source \n  `C:\\xinyeehow\\IS415-GAA\\In-Class_Ex\\In-Class_Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3125 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 21506.33 xmax: 50010.26 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\n\n\n\neldercare <- st_read(dsn = \"data/geospatial\", layer = \"ELDERCARE\") \n\nReading layer `ELDERCARE' from data source \n  `C:\\xinyeehow\\IS415-GAA\\In-Class_Ex\\In-Class_Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 120 features and 19 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 28218.43 xmax: 41665.14 ymax: 46804.9\nProjected CRS: SVY21 / Singapore TM\n\n\nUpdating CRS information\n\nmpsz <- st_transform(mpsz, 3414)\neldercare <- st_transform(eldercare, 3414)\nhexagons <- st_transform(hexagons, 3414)\n\nVerify crs\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nCleaning data\n\neldercare <- eldercare %>%\n  select(fid, ADDRESSPOS) %>%\n  mutate(capacity = 100)\n\n\nhexagons <- hexagons %>%\n  select(fid) %>%\n  mutate(demand = 100)\n\nImporting aspatial data\n\nODMatrix <- read_csv(\"data/aspatial/OD_Matrix.csv\", skip = 0)\n\nTidying OD matrix\n\ndistmat <- ODMatrix %>%\n  select(origin_id, destination_id, total_cost) %>%\n  spread(destination_id, total_cost)%>%\n  select(c(-c('origin_id')))\n\nChanging metres to kilometres\n\ndistmat_km <- as.matrix(distmat/1000)\n\nComputing distance matrix\n\neldercare_coord <- st_coordinates(eldercare)\nhexagon_coord <- st_coordinates(hexagons)\n\n\nEucMatrix <- SpatialAcc::distance(hexagon_coord,\n                                  eldercare_coord,\n                                  type = \"euclidean\")\n\n\nEucMatrix_km <- as.matrix(EucMatrix/1000)\n\nModelling and Visualising Accessibility using Hansen Method\nComputing Hansen’s Method\n\nacc_Hansen <- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_km, \n                            #d0 = 50,\n                            power = 2, \n                            family = \"Hansen\"))\n\nTidying output - Dataframe\n\ncolnames(acc_Hansen) <- \"accHansen\"\n\n\nacc_Hansen <- as_tibble(acc_Hansen)\n\nBinding accHansen with hexagons\n\nhexagon_Hansen <- bind_cols(hexagons, acc_Hansen)\n\nAlternatively, use this combined code chunk\n\nacc_Hansen <- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_km, \n                            #d0 = 50,\n                            power = 0.5, \n                            family = \"Hansen\"))\n\ncolnames(acc_Hansen) <- \"accHansen\"\nacc_Hansen <- tbl_df(acc_Hansen)\nhexagon_Hansen <- bind_cols(hexagons, acc_Hansen)\n\nVisualising Hansen’s accessibility\nExtract extend of hexagon for map plotting\n\nmapex <- st_bbox(hexagons)\n\nPlotting map\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_Hansen,\n         bbox = mapex) + \n  tm_fill(col = \"accHansen\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.1) +\n  tm_layout(main.title = \"Accessibility to eldercare: Hansen method\",\n            main.title.position = \"center\",\n            main.title.size = 2,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415-Geospatial Analytics and Applications",
    "section": "",
    "text": "To view all my work, please navigate using the pink navigation bar above."
  }
]